---
description: Instructions for releasing using GitHub and gh CLI
globs: 
---
# GitHub Release Process

This process uses GitHub Actions for automated building and publishing to PyPI.


## Release Steps

1. Update version numbers:
   - Edit `pyproject.toml`: Update `version = "x.y.z"`
   - Edit `src/donew/__init__.py`: Update `__version__ = "x.y.z"`

2. Update CHANGELOG.md:
Grab commits and messages between 2 releases and compile
   ```markdown
   ## [x.y.z] - YYYY-MM-DD
   ### Added
   - New features
   
   ### Changed
   - Changes in existing functionality
   
   ### Fixed
   - Bug fixes
   ```

3. Commit changes:
   ```bash
   git add .
   git commit -m "Release x.y.z"
   git push origin main
   ```

4. Create GitHub Release:
   ```bash
   # This will create a release and trigger the PyPI publish workflow
   gh release create vx.y.z \
   --title "DoNew vx.y.z" \
   --generate-notes
   ```

## Post-release

1. Monitor the release workflow:
   ```bash
   gh run list --workflow=pypi-publish.yml
   ```

2. Verify the release:
   - Check [GitHub Releases](mdc:https:/github.com/kenanbek/donew/releases)
   - Check [PyPI package](mdc:https:/pypi.org/p/donew)

Remember to replace `x.y.z` with the actual version number (e.g., "0.1.3").

Note: The GitHub Actions workflow will automatically:
- Build the package distributions
- Run tests
- Upload to PyPI
- You can monitor the progress in the Actions tab 